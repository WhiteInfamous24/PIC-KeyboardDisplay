%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/production/Main.o
RESET_VECT CODE 0 7DD 7DD 1 2 1
INT_VECT CODE 0 7DE 7DE 22 2 1
config CONFIG 4 2007 2007 1 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 110-16F 1
RAM 190-1EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 110-16F 1
BANK3 190-1EF 1
CONST 0-7DC 2
CONST 800-1FFF 2
ENTRY 0-7DC 2
ENTRY 800-1FFF 2
IDLOC 2000-2003 2
CODE 0-7DC 2
CODE 800-1FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-10F 1
SFR3 180-18F 1
COMMON 70-7F 1
EEDATA 2100-21FF 2
STRCODE 0-7DC 2
STRCODE 800-1FFF 2
STRING 0-7DC 2
STRING 800-1FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/production/Main.o
7DE INT_VECT CODE >22:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7DF INT_VECT CODE >33:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E0 INT_VECT CODE >34:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E1 INT_VECT CODE >35:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E2 INT_VECT CODE >36:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E3 INT_VECT CODE >39:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E4 INT_VECT CODE >40:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E5 INT_VECT CODE >41:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E6 INT_VECT CODE >42:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E7 INT_VECT CODE >44:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E8 INT_VECT CODE >47:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7E9 INT_VECT CODE >48:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7EA INT_VECT CODE >49:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7EB INT_VECT CODE >50:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7EC INT_VECT CODE >51:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7ED INT_VECT CODE >52:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7EE INT_VECT CODE >53:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7EF INT_VECT CODE >54:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F0 INT_VECT CODE >55:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F1 INT_VECT CODE >56:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F2 INT_VECT CODE >57:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F3 INT_VECT CODE >60:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F4 INT_VECT CODE >61:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F5 INT_VECT CODE >63:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F6 INT_VECT CODE >64:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F7 INT_VECT CODE >66:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F8 INT_VECT CODE >67:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7F9 INT_VECT CODE >69:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7FA INT_VECT CODE >70:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7FB INT_VECT CODE >71:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7FC INT_VECT CODE >72:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7FD INT_VECT CODE >73:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7FE INT_VECT CODE >74:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7FF INT_VECT CODE >75:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
7DD RESET_VECT CODE >16:D:\Documents\GitHub\PIC16F877A-Display7Seg\PIC16F877A-Display7Seg.X\Main.s
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 800 0 ABS 0 - -
__Hspace_4 400F 0 ABS 0 - -
__L__absolute__ 0 0 ABS 0 __absolute__ -
__LINT_VECT 0 0 ABS 0 INT_VECT -
__HINT_VECT 0 0 ABS 0 INT_VECT -
__HRESET_VECT 0 0 ABS 0 RESET_VECT -
__Hconfig 4010 0 CONFIG 4 config -
__LRESET_VECT 0 0 ABS 0 RESET_VECT -
__S0 800 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__H__absolute__ 0 0 ABS 0 __absolute__ -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
RESET_VECT 0 7DD FBA 1 2
INT_VECT 0 7DE FBC 22 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
